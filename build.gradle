buildscript {
	ext['springBootVersion'] = '1.5.7.RELEASE'
	ext['spock.version'] = '1.1-groovy-2.4'

	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
jar{
	baseName='customer-service'
	version = '0.0.1-SNAPSHOT'
}

group = 'com.oms.customer'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
	mavenLocal()
}


ext {
	springCloudServicesVersion = '1.5.0.RELEASE'
	springCloudVersion = 'Dalston.SR3'
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('org.springframework.boot:spring-boot-starter-data-mongodb')
	compile('io.pivotal.spring.cloud:spring-cloud-services-starter-circuit-breaker')
	compile('io.pivotal.spring.cloud:spring-cloud-services-starter-config-client')
	compile('io.pivotal.spring.cloud:spring-cloud-services-starter-service-registry')
	compile ('org.codehaus.groovy:groovy-all:2.4.5')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('com.oms.common.web:oms-common-web:0.0.1-SNAPSHOT')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile ('org.codehaus.groovy.modules.http-builder:http-builder:0.7.1')
	testCompile 'org.springframework:spring-test'
	testCompile 'org.spockframework:spock-core'
	testCompile 'org.spockframework:spock-spring'

	testCompile( 'com.athaydes:spock-reports:1.3.1' ) {
		transitive = false // this avoids affecting your version of Groovy/Spock
	}
}

dependencyManagement {
	imports {
		mavenBom "io.pivotal.spring.cloud:spring-cloud-services-dependencies:${springCloudServicesVersion}"
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

sourceSets {
	acceptance {
		groovy.srcDir file('src/acceptance/groovy')
		resources.srcDir file('src/acceptance/resources')
		compileClasspath += sourceSets.test.compileClasspath
		runtimeClasspath += sourceSets.test.runtimeClasspath
	}
}
